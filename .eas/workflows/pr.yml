name: Push to GitHub

on:
  push:
    branches:
      - "*"

jobs:
  lint:
    name: Lint, format, check types
    steps:
      - uses: eas/checkout
      - uses: eas/install_node_modules
      - run: yarn lint
      - run: yarn format
      - run: yarn tsc
  test:
    name: Unit tests
    needs: [lint]
    steps:
      - uses: eas/checkout
      - uses: eas/install_node_modules
      - run: yarn test
  publish_update:
    name: Publish update
    after: [lint, test]
    type: update
  fingerprint:
    name: Fingerprint
    needs: [lint, test]
    outputs:
      ios_fingerprint_hash: ${{ steps.fingerprint_step_id.outputs.ios_fingerprint_hash }}
      android_fingerprint_hash: ${{ steps.fingerprint_step_id.outputs.android_fingerprint_hash }}
    steps:
      - uses: eas/checkout
      - uses: eas/install_node_modules
      - name: Install additional tools
        run: sudo apt-get update -y && sudo apt-get install -y jq
      - name: Set fingerprint variables
        id: fingerprint_step_id
        run: |
          IOS_FINGERPRINT=$(npx expo-updates fingerprint:generate --platform ios)
          IOS_FINGERPRINT_HASH=$(echo $IOS_FINGERPRINT | jq -r '.hash')
          ANDROID_FINGERPRINT=$(npx expo-updates fingerprint:generate --platform android)
          ANDROID_FINGERPRINT_HASH=$(echo $ANDROID_FINGERPRINT | jq -r '.hash')
          set-output ios_fingerprint_hash $IOS_FINGERPRINT_HASH
          set-output android_fingerprint_hash $ANDROID_FINGERPRINT_HASH
  get_android_build:
    name: Check for existing Android build
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.android_fingerprint_hash }}
  get_ios_build:
    name: Check for existing iOS build
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
